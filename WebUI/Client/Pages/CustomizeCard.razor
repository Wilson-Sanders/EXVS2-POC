@page "/Cards/Customize/{AccessCode}/{ChipId}"
@inject HttpClient Http
@inject ILogger<CustomizeCard> Logger
@inject ISnackbar Snackbar
@inject IDataService DataService
@inject IDialogService DialogService
@using WebUI.Shared.Dto.Common;
@using WebUI.Shared.Dto.Enum;
@using WebUI.Shared.Dto.Json
@using WebUI.Client.Services

<MudBreadcrumbs Items="breadcrumbs" Class="px-0"></MudBreadcrumbs>

<PageTitle>Customize</PageTitle>
<MudStack Row Class="flex-column">
    <h1>Customization Options</h1>

    <MudStack Row Class="align-self-end">
        <MudProgressCircular @bind-Class="@HideSaveAllProgress" Color="Color.Default" Indeterminate="true" />
        <MudButton OnClick="@SaveAll" Variant="Variant.Filled" Color="@Color.Primary">Save All</MudButton>
    </MudStack>
</MudStack>

@if (errorMessage is not null)
{
    <MudText Color="Color.Error" Typo="Typo.h3">@errorMessage</MudText>
    return;
}

@if (_basicProfile is null)
{
    <MudStack>
        <MudSkeleton Width="100%"/>
        <MudSkeleton Width="100%"/>
        <MudSkeleton Width="100%"/>
        <MudSkeleton Width="100%"/>
        <MudSkeleton Width="100%"/>
        <MudSkeleton Width="100%"/>
    </MudStack>
    return;
}

<MudStack Class="mt-2">
    <MudCard Class="my-2" Elevation="5">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h6">General Card Info</MudText>
            </CardHeaderContent>
            <CardHeaderActions>
                <MudStack Row>
                    <MudProgressCircular @bind-Class="@HideProfileProgress" Color="Color.Default" Indeterminate="true" />
                    <MudIconButton Icon="@Icons.Material.Filled.Save" Variant="Variant.Filled" OnClick="@SaveBasicProfile"
                                   Color="Color.Primary" Size="Size.Large" aria-label="save"></MudIconButton>
                </MudStack>
            </CardHeaderActions>
        </MudCardHeader>
        <MudCardContent>
            <MudStack>
                <MudStack Row>
                    <MudStack Row Class="align-center">
                        <MudToggleIconButton @bind-Toggled="@SwitchOpenRecord"
                                             Icon="@Icons.Material.Filled.VisibilityOff" Color="@Color.Error" Title="Off"
                                             ToggledIcon="@Icons.Material.Filled.Visibility" ToggledColor="@Color.Success" ToggledTitle="On" />
                        <span>@(SwitchOpenRecord ? "Show" : "Hide") Record </span>
                    </MudStack>
                    <MudStack Row Class="align-center">
                        <MudToggleIconButton @bind-Toggled="@SwitchOpenEchelon"
                                             Icon="@Icons.Material.Filled.GridOff" Color="@Color.Error" Title="Off"
                                             ToggledIcon="@Icons.Material.Filled.GridOn" ToggledColor="@Color.Success" ToggledTitle="On" />
                        <span>@(SwitchOpenEchelon ? "Show" : "Hide") Rank </span>
                    </MudStack>
                </MudStack>
                <MudItem xs="8">
                    <MudTextField @bind-Value="_basicProfile.UserName"
                                  Immediate="true"
                                  Variant="Variant.Outlined"
                                  Counter="PLAYER_NAME_MAX_LENGTH"
                                  MaxLength="PLAYER_NAME_MAX_LENGTH"
                                  Label="Player Name"
                                  Validation="ValidatePlayerName" />
                </MudItem>
                <MudItem xs="8">
                    <MudSelect @bind-Value="_basicProfile.DefaultBgmPlayingMethod" Margin="Margin.Normal" T="BgmPlayingMethod"
                               Label="BGM Play Type" Variant="Variant.Outlined" ToStringFunc="@converter">
                        @foreach (var item in Enum.GetValues<BgmPlayingMethod>())
                        {
                            <MudSelectItem Value="@(item)" />
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="10">
                    <MudGrid Class="align-center">
                        <MudItem xs="10">
                            <MudExpansionPanels>
                                <MudExpansionPanel Text="Bgm List / Order">
                                    <MudSimpleTable Style="overflow-x: auto;">
                                        <tbody>
                                            @if(_basicProfile.DefaultBgmList != null && _basicProfile.DefaultBgmList.Count() > 0)
                                            {
                                                foreach (var x in _basicProfile.DefaultBgmList)
                                                {
                                                    <tr>
                                                        <td>@DataService.GetBgmById(x)?.NameJP</td>
                                                    </tr>
                                                }
                                            }
                                            else
                                            {
                                                _basicProfile.DefaultBgmList = Array.Empty<uint>();
                                                <tr>
                                                    <td>No Entries</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </MudSimpleTable>
                                </MudExpansionPanel>
                            </MudExpansionPanels>
                        </MudItem>
                        <MudItem xs="2">
                            <MudIconButton Variant="Variant.Filled" Size="Size.Small" Icon="@Icons.Material.Filled.Edit" aria-label="edit"
                                           OnClick="() => OpenProfileChangeBgmOrderDialog()" />
                        </MudItem>
                    </MudGrid>
                </MudItem>
                <MudItem xs="10">
                    <MudGrid Class="align-center">
                        <MudItem xs="10">
                            <MudField Label="Gauge UI" Variant="Variant.Outlined">
                                <MudText Align="Align.Center">@GetGaugeName(_basicProfile.DefaultGaugeDesignId)</MudText>
                            </MudField>
                        </MudItem>
                        <MudItem xs="2">
                            <MudIconButton Variant="Variant.Filled" Size="Size.Small" Icon="@Icons.Material.Filled.Edit" aria-label="edit"
                                            OnClick="() => OpenProfileChangeGaugeDialog()" />
                        </MudItem>
                    </MudGrid>
                </MudItem>
            </MudStack>
        </MudCardContent>
    </MudCard>
    <MudCard Class="my-2" Elevation="5">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h6">Navigators</MudText>
            </CardHeaderContent>
            <CardHeaderActions>
                <MudStack Row>
                    <MudProgressCircular @bind-Class="@HideNaviProgress" Color="Color.Default" Indeterminate="true" />
                    <MudIconButton Icon="@Icons.Material.Filled.Save" Variant="Variant.Filled" OnClick="@SaveNavigatorProfile"
                                   Color="Color.Primary" Size="Size.Large" aria-label="save"></MudIconButton>
                </MudStack>
            </CardHeaderActions>
        </MudCardHeader>
        <MudCardContent>
            <MudStack>
                <MudItem xs="10">
                    <MudGrid Class="align-center">
                        <MudItem xs="10">
                            <MudField Label="UI Navigator" Variant="Variant.Outlined">
                                <MudText Align="Align.Center">@GetNaviName(_naviProfile.DefaultUiNaviId)</MudText>
                            </MudField>
                        </MudItem>
                        <MudItem xs="2">
                            <MudIconButton Variant="Variant.Filled" Size="Size.Small" Icon="@Icons.Material.Filled.Edit" aria-label="edit"
                                           OnClick="() => OpenNaviChangeUiDialog()" />
                        </MudItem>
                    </MudGrid>
                </MudItem>
                <MudItem xs="10">
                    <MudGrid Class="align-center">
                        <MudItem xs="10">
                            <MudField Label="In Battle Navigator" Variant="Variant.Outlined">
                                <MudText Align="Align.Center">@GetNaviName(_naviProfile.DefaultBattleNaviId)</MudText>
                            </MudField>
                        </MudItem>
                        <MudItem xs="2">
                            <MudIconButton Variant="Variant.Filled" Size="Size.Small" Icon="@Icons.Material.Filled.Edit" aria-label="edit"
                                           OnClick="() => OpenNaviChangeBattleDialog()" />
                        </MudItem>
                    </MudGrid>
                </MudItem>
            </MudStack>
        </MudCardContent>
    </MudCard>
    <MudCard Class="my-2" Elevation="5">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h6">Navigator alternative costumes</MudText>
            </CardHeaderContent>
            <CardHeaderActions>
                <MudStack Row>
                    <MudProgressCircular @bind-Class="@HideNaviCostumeProgress" Color="Color.Default" Indeterminate="true" />
                    <MudIconButton Icon="@Icons.Material.Filled.Save" Variant="Variant.Filled" OnClick="@SaveNaviCostume"
                                   Color="Color.Primary" Size="Size.Large" aria-label="save"></MudIconButton>
                </MudStack>
            </CardHeaderActions>
        </MudCardHeader>
        <MudCardContent>
            <MudStack>
                <MudDataGrid Elevation="5"
                             Items="@_naviObservableCollection"
                             ReadOnly="false"
                             EditMode="@(DataGridEditMode.Cell)"
                             EditTrigger="@(DataGridEditTrigger.OnRowClick)"
                             SortMode="@SortMode.None"
                             Filterable="true" 
                             QuickFilter="@_naviQuickFilter"
                             ColumnResizeMode="ResizeMode.None"
                             Groupable="false">
                    <ToolBarContent>
                        <MudTextField @bind-Value="_naviCostumeSearchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="false"
                                        AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-4" Variant="Variant.Outlined">
                        </MudTextField>
                        <MudTooltip Text="Navis without alternate costumes are not in the list.">
                            <MudIconButton Class="mx-2" Icon="@Icons.Material.Outlined.Info" />
                        </MudTooltip>
                    </ToolBarContent>
                    <Columns>
                        <PropertyColumn Property="x => x.Navigator.Id" IsEditable="true" Title="Navigator">
                            <EditTemplate>
                                <MudText>@GetNaviName(context.Item.Navigator.Id)</MudText>
                            </EditTemplate>
                        </PropertyColumn>
                        <PropertyColumn Property="x => x.Navi" Title="Costume">
                            <EditTemplate>
                                <MudStack Row>
                                    @if(context.Item.Navi != null)
                                    {
                                        <MudSelect @bind-Value="context.Item.Navi.CostumeId" T="uint" SelectedValuesChanged="(selectedIds) => OnNaviCostumeSelectChanged(selectedIds, context.Item)" Variant="Variant.Outlined">
                                            @foreach (var costume in context.Item.Navigator.Costumes)
                                            {
                                                <MudSelectItem Value="costume.Id">@costume.Value</MudSelectItem>
                                            }
                                        </MudSelect>
                                    }
                                    else
                                    {
                                        <MudSelect T="uint" SelectedValuesChanged="(selectedIds) => OnNaviCostumeSelectChanged(selectedIds, context.Item)" Variant="Variant.Outlined">
                                            @foreach(var costume in context.Item.Navigator.Costumes)
                                            {
                                                <MudSelectItem Value="costume.Id">@costume.Value</MudSelectItem>
                                            }
                                        </MudSelect>                                        
                                    }
                                </MudStack>
                            </EditTemplate>
                        </PropertyColumn>
                    </Columns>
                    <PagerContent>
                        <MudDataGridPager PageSizeOptions="@_pageSizeOptions" />
                    </PagerContent>
                </MudDataGrid>
            </MudStack>
        </MudCardContent>
    </MudCard>
    <MudCard Class="my-2" Elevation="5">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h6">Favourite Mobile Suits</MudText>
            </CardHeaderContent>
            <CardHeaderActions>
                <MudStack Row>
                    <MudProgressCircular @bind-Class="@HideFavMsProgress" Color="Color.Default" Indeterminate="true" />
                    <MudIconButton Icon="@Icons.Material.Filled.Save" Variant="Variant.Filled" OnClick="@SaveFavouriteMobileSuits"
                                   Color="Color.Primary" Size="Size.Large" aria-label="save"></MudIconButton>
                </MudStack>
            </CardHeaderActions>
        </MudCardHeader>
        <MudCardContent>
            <MudStack Row>
                <MudButton OnClick="@AddFavouriteMobileSuitItem" Variant="Variant.Filled" Color="@Color.Primary" Class="mb-4 add-item-btn">Add Item</MudButton>
            </MudStack>
            <MudStack>
                <MudDataGrid 
                    Elevation="5"
                    Items="@_favouriteMs"
                    Filterable="false"
                    ReadOnly="false"
                    EditMode="@(DataGridEditMode.Cell)"
                    EditTrigger="@(DataGridEditTrigger.OnRowClick)"
                    SortMode="@SortMode.None"
                    Groupable="false">
                <Columns>
                    <PropertyColumn Property="x => x.MsId" IsEditable="true" Title="Mobile Suit">
                        <EditTemplate>
                            <MudGrid Class="align-center">
                                <MudItem xs="9">
                                    <MudText Align="Align.Center">@GetMobileSuitName(context.Item.MsId)</MudText>
                                </MudItem>
                                <MudItem xs="3">
                                    <MudIconButton Variant="Variant.Filled" Size="Size.Small" Icon="@Icons.Material.Filled.Edit" aria-label="edit"
                                                    OnClick="() => OpenChangeFavouriteMsDialog(context.Item)" />
                                </MudItem>
                            </MudGrid>
                        </EditTemplate>
                    </PropertyColumn>
                    <PropertyColumn Property="x => x.BurstType" Title="Burst Type">
                        <EditTemplate>
                            <MudStack Row>
                                <MudSelect @bind-Value="context.Item.BurstType" T="BurstType" Variant="Variant.Outlined">
                                    @foreach (var item in Enum.GetValues<BurstType>())
                                    {
                                        <MudSelectItem Value="item">@item.ToString()</MudSelectItem>
                                    }
                                </MudSelect>
                            </MudStack>
                    </EditTemplate>
                </PropertyColumn>
                    <PropertyColumn Property="x => x.BattleNaviId" Title="In Battle Navi">
                        <EditTemplate>
                            <MudGrid Class="align-center">
                                <MudItem xs="9">
                                    <MudText Align="Align.Center">@GetNaviName(context.Item.BattleNaviId)</MudText>
                                </MudItem>
                                <MudItem xs="3">
                                    <MudIconButton Variant="Variant.Filled" Size="Size.Small" Icon="@Icons.Material.Filled.Edit" aria-label="edit"
                                                   OnClick="() => OpenFavMsChangeNaviDialog(context.Item)" />
                                </MudItem>
                            </MudGrid>
                        </EditTemplate>
                    </PropertyColumn>
                    <PropertyColumn Property="x => x.GaugeDesignId" Title="Gauge UI">
                        <EditTemplate>
                            <MudGrid Class="align-center">
                                <MudItem xs="9">
                                    <MudText Align="Align.Center">@GetGaugeName(context.Item.GaugeDesignId)</MudText>
                                </MudItem>
                                <MudItem xs="3">
                                    <MudIconButton Variant="Variant.Filled" Size="Size.Small" Icon="@Icons.Material.Filled.Edit" aria-label="edit"
                                                   OnClick="() => OpenFavMsChangeGaugeDialog(context.Item)" />
                                </MudItem>
                            </MudGrid>
                        </EditTemplate>
                    </PropertyColumn>
                    <PropertyColumn Property="x => x.BgmList" IsEditable="false" Title="Bgm Order">
                        <CellTemplate>
                            <MudGrid Class="align-center">
                                <MudItem xs="10">
                                    <MudExpansionPanels>
                                        <MudExpansionPanel Text="Order">
                                            <MudSimpleTable Style="overflow-x: auto;">
                                                <tbody>
                                                    @if (context.Item.BgmList != null && context.Item.BgmList.Count() > 0)
                                                    {
                                                        foreach (var x in context.Item.BgmList)
                                                        {
                                                            <tr>
                                                                <td>@DataService.GetBgmById(x)?.NameJP</td>
                                                            </tr>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        context.Item.BgmList = Array.Empty<uint>();
                                                        <tr>
                                                            <td>No Entries</td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </MudSimpleTable>
                                        </MudExpansionPanel>
                                    </MudExpansionPanels>
                                </MudItem>
                                <MudItem xs="2">
                                    <MudIconButton Variant="Variant.Filled" Size="Size.Small" Icon="@Icons.Material.Filled.Edit" aria-label="edit"
                                                   OnClick="() => OpenFavMsChangeBgmOrderDialog(context.Item)" />
                                </MudItem>
                            </MudGrid>
                        </CellTemplate>
                    </PropertyColumn>
                    <PropertyColumn Property="x => x.BgmPlayingMethod" Title="BGM Play Type">
                        <EditTemplate>
                            <MudStack Row>
                                <MudSelect @bind-Value="context.Item.BgmPlayingMethod" T="BgmPlayingMethod" Variant="Variant.Outlined">
                                    @foreach (var item in Enum.GetValues<BgmPlayingMethod>())
                                    {
                                        <MudSelectItem Value="item">@item.ToString()</MudSelectItem>
                                    }
                                </MudSelect>
                            </MudStack>
                        </EditTemplate>
                    </PropertyColumn>
                    <PropertyColumn Property="x => x">
                        <EditTemplate>
                                <MudIconButton Variant="Variant.Filled" Size="Size.Small" Color="Color.Error"
                                               Icon="@Icons.Material.Filled.Delete" OnClick="() => RemoveFavouriteUnit(context)"></MudIconButton>
                        </EditTemplate>
                    </PropertyColumn>
                </Columns>
            </MudDataGrid>
            </MudStack>
        </MudCardContent>
    </MudCard>
    <MudCard Class="my-2" Elevation="5">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h6">Pilot alternative costumes</MudText>
            </CardHeaderContent>
            <CardHeaderActions>
                <MudStack Row>
                    <MudProgressCircular @bind-Class="@HideMsCostumeProgress" Color="Color.Default" Indeterminate="true" />
                    <MudIconButton Icon="@Icons.Material.Filled.Save" Variant="Variant.Filled" OnClick="@SaveMobileSuitsCostume"
                                   Color="Color.Primary" Size="Size.Large" aria-label="save"></MudIconButton>
                </MudStack>
            </CardHeaderActions>
        </MudCardHeader>
        <MudCardContent>
            <MudStack>
                <MudDataGrid Elevation="5"
                             Items="@_mobileSuitsSkillGroups"
                             ReadOnly="false"
                             EditMode="@(DataGridEditMode.Cell)"
                             EditTrigger="@(DataGridEditTrigger.OnRowClick)"
                             SortMode="@SortMode.None"
                             Filterable="true" 
                             QuickFilter="@_quickFilter"
                             ColumnResizeMode="ResizeMode.None"
                             Groupable="false">
                    <ToolBarContent>
                        <MudTextField @bind-Value="_msCostumeSearchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="false"
                                        AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-4" Variant="Variant.Outlined">
                        </MudTextField>
                        <MudTooltip Text="Mobile Suits without alternate costumes are not in the list.">
                            <MudIconButton Class="mx-2" Icon="@Icons.Material.Outlined.Info" />
                        </MudTooltip>
                    </ToolBarContent>
                    <Columns>
                        <PropertyColumn Property="x => x.MobileSuit.Id" IsEditable="true" Title="Mobile Suit">
                            <EditTemplate>
                                <MudText>@GetMobileSuitName(context.Item.MobileSuit.Id)</MudText>
                            </EditTemplate>
                        </PropertyColumn>
                        <PropertyColumn Property="x => x.SkillGroup" Title="Costume">
                            <EditTemplate>
                                <MudStack Row>
                                    @if(context.Item.SkillGroup != null)
                                    {
                                        <MudSelect @bind-Value="context.Item.SkillGroup.CostumeId" T="uint" SelectedValuesChanged="(selectedIds) => OnCostumeSelectChanged(selectedIds, context.Item)" Variant="Variant.Outlined">
                                            @foreach (var costume in context.Item.MobileSuit.Costumes)
                                            {
                                                <MudSelectItem Value="costume.Id">@costume.Value</MudSelectItem>
                                            }
                                        </MudSelect>
                                    }
                                    else
                                    {
                                        <MudSelect T="uint" SelectedValuesChanged="(selectedIds) => OnCostumeSelectChanged(selectedIds, context.Item)" Variant="Variant.Outlined">
                                            @foreach(var costume in context.Item.MobileSuit.Costumes)
                                            {
                                                <MudSelectItem Value="costume.Id">@costume.Value</MudSelectItem>
                                            }
                                        </MudSelect>                                        
                                    }
                                </MudStack>
                            </EditTemplate>
                        </PropertyColumn>
                    </Columns>
                    <PagerContent>
                        <MudDataGridPager PageSizeOptions="@_pageSizeOptions" />
                    </PagerContent>
                </MudDataGrid>
            </MudStack>

            <MudStack>
@*                <MudItem xs="10">
                    <MudGrid Class="align-center">
                        <MudItem xs="10">
                            <MudField Label="In Battle Navigator" Variant="Variant.Outlined">
                                <MudText Align="Align.Center">@GetMobileSuitName(costume.DefaultBattleNaviId)</MudText>
                            </MudField>
                        </MudItem>
                        <MudItem xs="2">
                            <MudIconButton Variant="Variant.Filled" Size="Size.Small" Icon="@Icons.Material.Filled.Edit" aria-label="edit"
                                           OnClick="() => OpenNaviChangeBattleDialog()" />
                        </MudItem>
                    </MudGrid>
                </MudItem>
              <MudSelect @bind-Value="SelectedHasCostumeMsValue" T="MobileSuit"
                           Label="MS Available For Alternative Costume" Variant="Variant.Outlined">
                    @foreach (var item in DataService.GetCostumeMobileSuitSortedById())
                    {
                        <MudSelectItem Value="item">@item.NameEN</MudSelectItem>
                    }
                </MudSelect>
                @if (SelectedHasCostumeMsValue is not null)
                {
                    <MudSelect @bind-Value="SelectedMsCostumeValue" T="Costume"
                                Label="Alternative Costume" Variant="Variant.Outlined">
                        @foreach (var item in SelectedHasCostumeMsValue!.Costumes)
                        {
                            <MudSelectItem Value="item">@item.Name</MudSelectItem>
                        }
                    </MudSelect>
                }*@
            </MudStack>
        </MudCardContent>
    </MudCard>
    <MudCard Class="my-2" Elevation="5">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h6">Triad Mode CPU Partner</MudText>
            </CardHeaderContent>
            <CardHeaderActions>
                <MudStack Row>
                    <MudProgressCircular @bind-Class="@HideTriadCpuPartnerProgress" Color="Color.Default" Indeterminate="true" />
                    <MudIconButton Icon="@Icons.Material.Filled.Save" Variant="Variant.Filled" OnClick="@SaveTriadCpuPartner"
                                   Color="Color.Primary" Size="Size.Large" aria-label="save"></MudIconButton>
                </MudStack>
            </CardHeaderActions>
        </MudCardHeader>
        <MudCardContent>
            <MudStack>
                <MudItem xs="10">
                    <MudGrid Class="align-center">
                        <MudItem xs="10">
                            <MudField Label="CPU Mobile Suit" Variant="Variant.Outlined">
                                <MudText Align="Align.Center">@GetMobileSuitName(cpuTriadPartner.MobileSuitId)</MudText>
                            </MudField>
                        </MudItem>
                        <MudItem xs="2">
                            <MudIconButton Variant="Variant.Filled" Size="Size.Small" Icon="@Icons.Material.Filled.Edit" aria-label="edit"
                                           OnClick="() => OpenCpuTriadMobileSuitUiDialog()" />
                        </MudItem>
                    </MudGrid>
                </MudItem>
                <MudItem xs="12">
                    <MudSlider @bind-Value="cpuTriadPartner.ArmorLevel" ValueLabel="true" Variant="Variant.Filled" Min="0" Max="100">Armor (耐久値):</MudSlider>
                </MudItem>
                <MudItem xs="12">
                    <MudSlider @bind-Value="cpuTriadPartner.ShootAttackLevel" ValueLabel="true" Variant="Variant.Filled" Min="0" Max="100">Shooting (射撃･攻):</MudSlider>
                </MudItem>
                <MudItem xs="12">
                    <MudSlider @bind-Value="cpuTriadPartner.InfightAttackLevel" ValueLabel="true" Variant="Variant.Filled" Min="0" Max="100">Infight (格闘･攻):</MudSlider>
                </MudItem>
                <MudItem xs="12">
                    <MudSlider @bind-Value="cpuTriadPartner.BoosterLevel" ValueLabel="true" Variant="Variant.Filled" Min="0" Max="100">Booster (ブースト):</MudSlider>
                </MudItem>
                <MudItem xs="12">
                    <MudSlider @bind-Value="cpuTriadPartner.ExGaugeLevel" ValueLabel="true" Variant="Variant.Filled" Min="0" Max="100">EX Gauge (EXゲージ):</MudSlider>
                </MudItem>
                <MudItem xs="12">
                    <MudSlider @bind-Value="cpuTriadPartner.AiLevel" ValueLabel="true" Variant="Variant.Filled" Min="0" Max="100">AI:</MudSlider>
                </MudItem>
                <MudItem xs="12">
                    <MudSelect @bind-Value="SelectedTriadSkill1" T="IdValuePair"
                               Label="CPU Skill 1" Variant="Variant.Outlined">
                        @foreach (var item in DataService.GetSortedTriadSkillList())
                        {
                            <MudSelectItem Value="item">@item.Value</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="12">
                    <MudSelect @bind-Value="SelectedTriadSkill2" T="IdValuePair"
                                Label="CPU Skill 2" Variant="Variant.Outlined">
                        @foreach (var item in DataService.GetSortedTriadSkillList())
                        {
                            <MudSelectItem Value="item">@item.Value</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="12">
                    <MudSelect Label="Burst Type" @bind-Value="cpuTriadPartner.BurstType" T="BurstType" Variant="Variant.Outlined">
                        @foreach (var item in Enum.GetValues<BurstType>())
                        {
                            <MudSelectItem Value="item">@item.ToString()</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="12">
                    <MudTextField @bind-Value="cpuTriadPartner.TriadTeamName"
                                  Immediate="true"
                                  Variant="Variant.Outlined"
                                  Counter="PLAYER_NAME_MAX_LENGTH"
                                  MaxLength="PLAYER_NAME_MAX_LENGTH"
                                  Label="Triad Team Name"
                                  Validation="ValidateTeamName" />
                </MudItem>
                <MudItem xs="12">
                    <MudSelect @bind-Value="SelectedTriadTeamBanner" T="IdValuePair"
                            Label="Triad Team Banner" Variant="Variant.Outlined">
                         @foreach (var item in DataService.GetSortedTriadTeamBannerList())
                         {
                             <MudSelectItem Value="item">@item.Value</MudSelectItem>
                         }
                    </MudSelect>
                </MudItem>
            </MudStack>
        </MudCardContent>
    </MudCard>
    <MudCard Class="my-2" Elevation="5">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h6">Customize Comment (カスタマイズコメント)</MudText>
            </CardHeaderContent>
            <CardHeaderActions>
                <MudStack Row>
                    <MudProgressCircular @bind-Class="@HideCustomizeCommentProgress" Color="Color.Default" Indeterminate="true" />
                    <MudIconButton Icon="@Icons.Material.Filled.Save" Variant="Variant.Filled" OnClick="@SaveCustomizeComment"
                                   Color="Color.Primary" Size="Size.Large" aria-label="save"></MudIconButton>
                </MudStack>
            </CardHeaderActions>
        </MudCardHeader>
         <MudCardContent>
             <MudStack>
                 <MudItem xs="12">
                     Detail refer to: <MudLink Href="https://w.atwiki.jp/exvs2xb/pages/464.html" Target="_blank">Wiki</MudLink>
                 </MudItem>
                 <MudItem xs="12">Example of Sentence include: そんな[]、修正してやる！</MudItem>
                 <MudItem xs="12">Example of Parts include: [Sフリーダム], [キラ], [天然] etc...</MudItem>
             </MudStack>
             <MudGrid>
                 <MudItem xs="4">
                     <MudNumericField @bind-Value="CustomizeComment.BasePhraseId" Label="Sentence ID" Variant="Variant.Text" Min="0" Max="10000" HelperText="0-10000"/>
                 </MudItem>
                 <MudItem xs="4">
                     <MudNumericField @bind-Value="CustomizeComment.SubstitutePart1Id" Label="Part 1 ID" Variant="Variant.Text" Min="0" Max="10000" HelperText="0-10000"/>
                 </MudItem>
                 <MudItem xs="4">
                     <MudNumericField @bind-Value="CustomizeComment.SubstitutePart2Id" Label="Part 2 ID" Variant="Variant.Text" Min="0" Max="10000" HelperText="0-10000"/>
                 </MudItem>
             </MudGrid>
         </MudCardContent>
    </MudCard>
</MudStack>